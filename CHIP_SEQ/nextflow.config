// The config options below are for all compute environments

params {
  // ***TO BE INEVITABLY DEFINED BY THE USER***

  // SAMPLESHEET FILE
  samplesheet = "/hpcnfs/scratch/DP/mmonciotti/units4.tsv"

  // EXTERNAL SCRIPTS DIRECTORY (specify path of folder containing all external -R and Python- scripts)
  ext_scripts = "/hpcnfs/scratch/DP/mmonciotti/CHIP_SEQ/scripts"

  // TEMPORARY RESULTS DIRECTORY
  // (specify path of folder where you want your results published, I suggest this to be in your scratch folder for easy access)
  publish_dir = "/hpcscratch/ieo/ieo7015"
  // DIRECTORIES COPIED IN THE FINAL RESULTS DIRECTORY
  // (you can remove or add other directories which you want to copy to the final directory)
  // options: 00log  01qc  02aln  03peak_macs2  04peak_annot  06bigwig
  dirsToKeep = ["01qc", "03peak_macs2", "04peak_annot", "06bigwig"]
  // FINAL SAVED RESULTS DIRECTORY 
  // (you must create the directory beforehand, otherwise the system will create it and copy only the directory contents into it, instead of the subdirectories needed)
  final_dir = "/hpcnfs/data/DP/mmonciotti"

  // ***OTHER PARAMS***
  // general process threads
  threads = 8

  // ALIGNMENT
  // set aligner (Bowtie or Bowtie2) for sequence alignment and spike-in alignment
  aligner = "Bowtie"
  
  // set aligner params independent from aligner choice
  align_threads = 8
  samtools_mem = 2 // Memory used by every core of samtools (GB). Be careful that memory x threads is not bigger than the amount of memory assigned to align rule
  
  // Does aligner index already exist? If not, pipeline will create one
  index_exists = true
  // if index_exists = false provide a comma-separated list of FASTA files containing the reference sequences used to build aligner index and specify assembly version with ref_name
  ref_input = "/hpcnfs/techunits/bioinformatics/refdata/Mus_musculus/UCSC/mm10/Sequence/BowtieIndex/genome.fa"
  ref_name = "mm10"
  index_dir = "/hpcnfs/data/DP" // specify the folder where you want to create the index
  
  // Bowtie parameters
  bowtie_index = "/hpcnfs/techunits/bioinformatics/refdata/Mus_musculus/UCSC/mm10/Sequence/BowtieIndex/genome"
  bowtie_global = "--chunkmbs 1024 -m 1 --best -S --no-unal"
  bowtie_pe = "-I 10 -X 1000"
  
  // Bowtie2 parameters
  bowtie2_index = "/hpcnfs/techunits/bioinformatics/refdata/Mus_musculus/UCSC/mm10/Sequence/Bowtie2Index/genome"
  bowtie2_global = "-k 1" 
  bowtie2_pe = "-I 10 -X 1000"

  // SPIKE ALIGNMENT
  // spike aligner indices
  spike_bowtie_index = "/hpcnfs/data/DP/dm6/dm6"
  spike_bowtie2_index = "/hpcnfs/data/DP/dm6/dm6"
  // Does aligner SPIKE index already exist? If not, pipeline will create one (same rules apply as the ones specified above)
  spike_index_exists = true
  spike_ref_input = "/hpcnfs/data/DP/dm6/completeGenome_dm6.fa"
  spike_ref_name = "dm6"
  spike_index_dir = "/hpcnfs/data/DP"

  // bam2BIGWIG
  // Set the read extension for SE data. For PE data it will be automatically set to the fragment size.
  read_extension = 200
  b2b_other = "--binSize 50"

  // macs2
  macs2_gsize = "mm"
  macs2_pvalue_narrow = 1e-5
  macs2_params = "--keep-dup all -m 3 30"
  macs2_pvalue_broad = 1e-5
  macs2_filt_peaks_pval = "10"

  // Determine the region corresponding to promoters around TSS
  // After TSS
  aTSS = 2500
  // Before TSS
  bTSS = 2500

  // QC refs
  rep_masker = "/hpcnfs/data/DP/Databases/RepeatMasker_noRandom_mm10.bed"
  bit = "/hpcnfs/data/DP/Databases/mm10.2bit"
  egenome_size = 2308125349
}

profiles {
  singularity {
    singularity.enabled = true
    singularity.autoMounts = true
    singularity.runOptions = '--bind /hpcnfs,/hpcscratch'
    process.container = '/hpcnfs/data/DP/Singularity/chipseq_pipeline_221110.sif'
    process.executor = 'pbspro'
  }
  IEO_conf { 
    includeConfig 'config/IEO_conf.config' 
    // cleanup = true
  }
}